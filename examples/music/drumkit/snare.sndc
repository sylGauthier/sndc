export input amp.param0 as tdecay;
export input amp2.param0 as cdecay;
export input fenv.param0 as hfcut;
export input f.lfcutoff as lfcut;

export output mix.out as out;

/* Timber */
amp: func {
    expr: "exp(-$0 * $s)";
    duration: 1;
    sampling: 100;

    param0: 50.;
}

wav0: osc {
    function: "sin";
    freq: 180;
    duration: 0.5;
    amplitude: amp.out;
}

wav1: osc {
    function: "saw";
    freq: 286;
    duration: 0.5;
    amplitude: amp.out;
}

wav2: osc {
    function: "saw";
    freq: 335;
    duration: 0.5;
    amplitude: amp.out;
}

wav3: osc {
    function: "sin";
    freq: 330;
    duration: 0.5;
    amplitude: amp.out;
}

timber: mix {
    input0: wav0.out;
    input1: wav1.out;
    input2: wav2.out;
    input3: wav3.out;
}



/* Cable */
noise: noise {
    duration: 1;
}

fenv: func {
    expr: "$0 * exp(-2 * $s)";
    duration: 1;
    sampling: 10;

    param0: 10000;
}

f: gaussbp {
    in: noise.out;
    lfcutoff: 1000;
    hfcutoff: fenv.out;
}

amp2: func {
    expr: "0.5 * exp(-$0 * $s)";
    duration: 1;
    sampling: 100;

    param0: 30;
}

envnoise: binop {
    operator: "mul";
    input0: f.out;
    input1: amp2.out;
}



/* Mixed output */
mix: mix {
    input0: timber.out;
    input1: envnoise.out;
}
